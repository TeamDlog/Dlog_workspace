<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="friendMapper">
	
	<resultMap type="Friend" id="friendResultSet">
		<id column="friend_no" property="friendNo" />
		<result column="friend_owner" property="friendOwner" />
		<result column="friend_nickname" property="friendNickname" />
		<result column="friend_accepted" property="friendAccepted" />
		<result column="friend_status" property="friendStatus" />
	</resultMap>
	
	<resultMap id="memberResultSet" type="Member">
		<id column="member_no" property="memberNo" />
		<result column="member_name" property="memberName" />
		<result column="member_id" property="memberId" />
		<result column="member_pwd" property="memberPwd" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="nickname" property="nickname" />	
		<result column="profile" property="profile" />
		<result column="enroll_date" property="enrollDate" />
		<result column="modify_date" property="modifyDate" />
		<result column="status" property="status" />
		<result column="introduction_title" property="introductionTitle" />
		<result column="introduction_content" property="introductionContent" />	
	</resultMap>
	
	<select id="selectFriendList"
			parameterType="_int"
			resultMap="friendResultSet">
		select friend_no, friend_owner, m.nickname friend_nickname, friend_accepted, friend_status
		  from friend f
		  join member m on(f.friend_accepted=m.member_no)
		 where friend_owner = #{friendOwner}
		   and friend_status = 'Y'
		 order 
		    by friend_no
	</select>
	
	<select id="selectFriendListCount"
			parameterType="_int"
			resultType="_int">
		select count(*)
		  from friend
		 where friend_owner = #{friendOwner}
		   and friend_status = 'Y'
	</select>
	
	<delete id="deleteFriend"
			parameterType="Friend">
		delete 
	      from friend
	     where friend_owner = #{friendOwner}
	       and friend_accepted = #{friendAccepted}
	</delete>
	
	<select id="searchFriend"
			parameterType="Member"
			resultMap="memberResultSet">
		select m.*
		  from friend f
		  join member m on(f.friend_accepted = m.member_no) 
		 where friend_owner = #{memberNo}
		   and m.nickname like '%'|| #{nickname} ||'%'
	</select>
	
	<select id="findFriend"
			parameterType="Member"
			resultMap="memberResultSet">
		select *
		  from member
		 where nickname = #{nickname}
	</select>
	
	<select id="requestFriend"
			parameterType="_int"
			resultMap="friendResultSet">
		select friend_no, friend_owner, m.nickname friend_nickname, friend_accepted, friend_status
		  from friend f
		  join member m on(f.friend_accepted=m.member_no)
		 where friend_owner = #{friendOwner}
		   and friend_status = 'N'
		 order 
		    by friend_no
	</select>
	
</mapper>
