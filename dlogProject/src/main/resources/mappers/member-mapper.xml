<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="Member">
		<id column="member_no" property="memberNo" />
		<result column="member_name" property="memberName" />
		<result column="member_id" property="memberId" />
		<result column="member_pwd" property="memberPwd" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="nickname" property="nickname" />	
		<result column="profile" property="profile" />
		<result column="enroll_date" property="enrollDate" />
		<result column="modify_date" property="modifyDate" />
		<result column="status" property="status" />
		<result column="introduction_title" property="introductionTitle" />
		<result column="introduction_content" property="introductionContent" />	
	</resultMap>
	
	<select id="idCheck" parameterType="string" resultType ="_int">
		select count(*)
		       member_id
		  from member
		 where member_id = #{memberId}
	</select>
	
	<select id="nicknameCheck" parameterType="string" resultType ="_int">
		select count(*)
		       nickname
		  from member
		 where nickname = #{nickname}
	</select>
	
	<select id="idSearch" parameterType="Member" resultType="string">
		select 
		       member_id
		  from member
		 where status = 'Y'
		   and member_name = #{memberName}
		   and phone = #{phone}
	</select>
	
	<select id="pwdSearch" parameterType="Member" resultType="string">
		select 
		       member_no
		  from member
		 where status = 'Y'
		   and member_id = #{memberId}
		   and member_name = #{memberName}
		   and phone = #{phone}
	</select>
	
	<update id="pwdUpdate" parameterType="Member">
		update
		       member
		   set member_pwd = #{memberPwd}
		 where member_no = #{memberNo}
	</update>
	
	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
		select
		       member_no
		     , member_name
		     , member_id
		     , member_pwd
		     , email
		     , phone
		     , nickname
		     , profile
		     , enroll_date
		     , modify_date
		     , status
		     , introduction_title
		     , introduction_content
		  from member
		 where status = 'Y'
		   and member_id = #{memberId}
		   and member_pwd = #{memberPwd}
	</select>
	
	<select id="selectMemberList" resultMap="memberResultSet">
		select 
		       member_no
		     , member_id
		     , nickname
		     , member_name
		     , email
		     , phone
		     , enroll_date
		     , status
		  from member
		 where member_no >= 2
	</select>
	
	<insert id="insertMember" parameterType="Member">
		insert
		  into member
		  (
		       member_no
		     , member_name
		     , member_id
		     , member_pwd
		     , email
		     , phone
		     , nickname
		     , enroll_date
		     , modify_date
		     , status 
		  )
		  values
		  (
		       seq_memberno.nextval
		     , #{memberName}
		     , #{memberId}
		     , #{memberPwd}
		     , #{email}
		     , #{phone}
		     , #{nickname}
		     , sysdate
		     , sysdate
		     , 'Y'
		  )
	</insert>
	
	<insert id="insertActive">
		insert 
		  into active
		  (
		       member_no
		     , active_dday
		     , active_voca
		     , active_memo
		     , active_timetable
		  )
		  values
		  (
		       seq_memberno.nextval
		     , 'Y'
		     , 'Y'
		     , 'Y'
		     , 'Y'
		  )
	</insert>
	
	<insert id="insertPrivacy">
		insert 
		  into privacy
		  (
		       member_no
		     , privacy_calendar
		     , privacy_diary
		     , privacy_freenote
		     , privacy_photo
		     , privacy_account
		     , privacy_dday
		     , privacy_voca
		     , privacy_memo
		     , privacy_timetable
		  )
		  values
		  (
		       seq_memberno.nextval
		     , 'Y'
		     , 'Y'
		     , 'Y'
		     , 'Y'
		     , 'Y'
		     , 'Y'
		     , 'Y'
		     , 'Y'
		     , 'Y'
		  )
	</insert>
	
	<insert id="insertColor">
		insert 
		  into my_color
		  (
		       member_no
		     , my_color_logo
		     , my_color_background
		     , my_color_menubar
		     , my_color_font
		  )
		  values
		  (
		       seq_memberno.nextval
		     , '#84c8b9'
		     , '#ffffff'	
		     , '#ffffff'	
		     , '#464a53'	
		  )
	</insert>

	<select id="infoList" parameterType="Member" resultMap="memberResultSet">
	select
			member_no
	      , profile  
		  ,	member_name
	      , member_id
	      , nickname
	      , email
	      , phone
	  from member
	 where status='Y'
	   and member_id=#{memberId}
	</select>
	<update id="infoUpdate" parameterType="Member">
		 update
		        member
		    set 
		     	nickname=#{nickname}
		      , email=#{email}
		      , phone=#{phone}
		      , profile=#{profile}  
		  where member_No=#{memberNo} 
	</update>
	
	 <select id ="introList" parameterType="Member" resultMap="memberResultSet">
		 select
		 		member_no
		      , introduction_title
		      , introduction_content  
		  from member
		  where member_id=#{memberId}
	 </select >
	 
	 <select id ="introListMn" parameterType="Member" resultMap="memberResultSet">
		 select
		 		member_no
		      , introduction_title
		      , introduction_content  
		  from member
		  where member_id=#{memberId}
	 </select >
	 
	 <update id="introInsert" parameterType="Member">
		update
		        member
		    set
		     	member_no=2
		      , introduction_title=#{introductionTitle}
		      , introduction_content=#{introductionContent}  
		  where member_id=#{memberId} 
	</update>
	
	<delete id="deleteMember" parameterType="string">
		update
	        member
	    set status = 'N'
	      , modify_date= sysdate
	  where member_id = #{memberId}
	</delete>
	
	<update id="updatePwd" parameterType="Member">
		update
		       member
		   set member_pwd = #{memberPwd}
		 where member_no = #{memberNo}
	</update>
	<select id="profile" parameterType="Member" resultMap="memberResultSet">
	select
			member_no
	      , profile  
		  , nickname
	      , email
	      , introduction_title
	  from member
	 where status='Y'
	   and member_no=#{memberNo}
	</select>
	
	

</mapper>
