<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="Member">
		<id column="member_no" property="memberNo" />
		<result column="member_name" property="memberName" />
		<result column="member_id" property="memberId" />
		<result column="member_pwd" property="memberPwd" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="nickname" property="nickname" />	
		<result column="profile" property="profile" />
		<result column="enroll_date" property="enrollDate" />
		<result column="modify_date" property="modifyDate" />
		<result column="status" property="status" />
		<result column="introduction_title" property="introductionTitle" />
		<result column="introduction_content" property="introductionContent" />	
	</resultMap>
	
	<select id="idCheck" parameterType="string" resultType ="_int">
		select count(*)
		       member_id
		  from member
		 where member_id = #{memberId}
	</select>
	
	<select id="nicknameCheck" parameterType="string" resultType ="_int">
		select count(*)
		       nickname
		  from member
		 where nickname = #{nickname}
	</select>
	
	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
		select
		       member_no
		     , member_name
		     , member_id
		     , member_pwd
		     , email
		     , phone
		     , nickname
		     , profile
		     , enroll_date
		     , modify_date
		     , status
		     , introduction_title
		     , introduction_content
		  from member
		 where status = 'Y'
		   and member_id = #{memberId}
		   and member_pwd = #{memberPwd}
	</select>

	<select id="infoList" parameterType="Member" resultMap="memberResultSet">
	select
			member_no
	      , profile  
		  ,	member_name
	      , member_id
	      , nickname
	      , email
	      , phone
	  from member
	 where status='Y'
	   and member_id=#{memberId}
	</select>
	<update id="infoUpdate" parameterType="Member">
		 update
		        member
		    set 
		        member_name=#{memberName}
		      , member_id=#{memberId}
		      , nickname=#{nickname}
		      , email=#{email}
		      , phone=#{phone}
		      , profile=#{profile}  
		  where member_id=#{memberId} 
	</update>
	
	 <select id ="introList" parameterType="Member" resultMap="memberResultSet">
		 select
		 		member_no
		      , introduction_title
		      , introduction_content  
		  from member
		  where member_id=#{memberId}
	 </select >
	 
	 <select id ="introListMn" parameterType="Member" resultMap="memberResultSet">
		 select
		 		member_no
		      , introduction_title
		      , introduction_content  
		  from member
		  where member_id=#{memberId}
	 </select >
	 
	 <insert id="introInsert" parameterType="Member">
		insert
		  into member
		  (
			
		  , introduction_title
		  , introduction_content
		  )
		  values
		  (
		  	 
		   , #{introductionTitle}
		   , #{introductionContent}
		 
		 )
	</insert>
	 
	 
	 
	 <update id="introUpdate" parameterType="Member">
		 update
		        member
		    set 
		        introduction_title=#{introductionTitle}
		      , introduction_content=#{introductionContent}  
		  where member_id=#{memberId} 
	</update>
	
	<delete id="deleteMember" parameterType="string">
		update
	        member
	    set status = 'N'
	      , modify_date= sysdate
	  where member_id = #{memberId}
	</delete>
	

</mapper>
