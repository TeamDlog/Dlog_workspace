<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="freenoteMapper">
	
	<resultMap type="Freenote" id="freenoteResultSet">
		<id column="freenote_no" property="freenoteNo" />
		<result column="freenote_title" property="freenoteTitle" />
		<result column="freenote_content" property="freenoteContent" />
		<result column="freenote_category" property="freenoteCategory" />
		<result column="freenote_topic" property="freenoteTopic" />
		<result column="freenote_privacy" property="freenotePrivacy" />
		<result column="freenote_privacy_comm" property="freenotePrivacyComm" />
		<result column="freenote_comment_yn" property="freenoteCommentYN" />
		<result column="freenote_count" property="freenoteCount" />
		<result column="freenote_like" property="freenoteLike" />
		<result column="create_date" property="createDate" />
		<result column="modify_date" property="modifyDate" />
		<result column="status" property="status" />
		<result column="nickname" property="freenoteWriter" />
		<result column="member_no" property="memberNo" />
		<result column="member_id" property="memberId" />
		<result column="replyCount" property="replyCount" />
		<result column="likestatus" property="likeStatus" />	
		<result column="profile" property="profile" />	
		<result column="rownum" property="rownum" />
	</resultMap>
	
	<resultMap type="Reply" id="replyResultSet">
		<id column="reply_no" property="replyNo" />
		<result column="reply_content" property="replyContent" />
		<result column="reply_like" property="replyLike" />
		<result column="create_date" property="createDate" />
		<result column="modify_date" property="modifyDate" />
		<result column="status" property="status" />
		<result column="ref_fno" property="refFno" />
		<result column="nickname" property="replyWriter" />
		<result column="ref_rno" property="refRno" />
		<result column="reply_level" property="replyLevel" />
		<result column="likestatus" property="likeStatus" />
		<result column="profile" property="profile" />	
	</resultMap>

	<select id="selectListCount" parameterType="SearchCondition" resultType="_int">
		select 
		       count(*)
		  from freenote
		 where member_no = #{mno}
		   and freenote_category like '%'||#{category}||'%'
		   and freenote_title like '%'||#{keyword}||'%'
		   and status='Y'
	</select>
	
	<select id="selectList" parameterType="SearchCondition" resultMap="freenoteResultSet">
		select 
		       rownum
		     , freenote_no
		     , freenote_title
		     , freenote_privacy
		     , freenote_category
		     , member_no
		     , to_char(create_date, 'yyyy-mm-dd') as create_date
             , (select count(*)
                  from reply
                 where ref_fno = freenote_no
                   and status ='Y'
                ) as replyCount
		  from freenote
		 where member_no = #{mno}
		   and freenote_category like '%'||#{category}||'%'
		   and freenote_title like '%'||#{keyword}||'%'
		   and status='Y'
		 order
			by freenote_no desc
	</select>
	
	<select id="selectCategory" parameterType="_int" resultType="string">
		select 
		       distinct freenote_category
		  from freenote
		 where member_no = #{mno}
		  and status = 'Y'
		 order
		    by freenote_category
	</select>
	
	<insert id="insertFreenote" parameterType="Freenote">
		insert
		  into freenote
		  (
		     freenote_no
		   , freenote_title
		   , freenote_content
		   , freenote_category
		   , freenote_topic
		   , freenote_privacy
		   , freenote_privacy_comm
		   , freenote_comment_yn
		   , member_no
		  )
		  values
		  (
		     seq_freenoteno.nextval
		   , #{freenoteTitle}
		   , #{freenoteContent}
		   , #{freenoteCategory}
		   , #{freenoteTopic}
		   , #{freenotePrivacy}
		   , #{freenotePrivacyComm}
		   , #{freenoteCommentYN}
		   , #{freenoteWriter}
		  )
	</insert>
	
	<update id="increaseCount" parameterType="_int">
		update 
		       freenote
		   set freenote_count = freenote_count + 1
		 where freenote_no = #{fno}
		   and status = 'Y'
	</update>
	
	<select id="selectFreenote" parameterType="Freenote" resultMap="freenoteResultSet">
		select
		       freenote_no
		     , freenote_title
		     , freenote_content
		     , freenote_category
		     , freenote_topic
		     , freenote_privacy
		     , freenote_privacy_comm
		     , freenote_comment_yn
		     , freenote_count
		     , freenote_like
		     , to_char(create_date, 'yyyy.mm.dd hh24:mi') as create_date
		     , nickname
		     , member_id
		     , member_no
		     , profile
		     , (select count(*)
                  from reply
                 where ref_fno = freenote_no
                   and status ='Y'
                ) as replyCount
             , (
		        select count(*)
		          from freenote_like f2
		         where f2.freenote_no = f.freenote_no
		           and member_no = #{freenoteWriter}
		       ) as likeStatus
		  from freenote f
		  join member using(member_no)
		 where freenote_no = #{freenoteNo}
		   and f.status = 'Y'
	</select>
	
	<update id="updateFreenote" parameterType="Freenote">
		update
		       freenote
		   set freenote_title = #{freenoteTitle}
		     , freenote_content = #{freenoteContent}
		     , freenote_category = #{freenoteCategory}
		     , freenote_topic = #{freenoteTopic}
		     , freenote_privacy = #{freenotePrivacy}
		     , freenote_privacy_comm = #{freenotePrivacyComm}
		     , freenote_comment_yn = #{freenoteCommentYN}
		     , modify_date = sysdate
		 where freenote_no = #{freenoteNo}
	</update>
	
	<update id="deleteFreenote" parameterType="_int">
		update 
		       freenote
		   set status = 'N'
		 where freenote_no = #{fno}
	</update>
	
	<!-- 댓글 -->
	<select id="selectReplyListCount" parameterType="_int" resultType="_int">
		select 
		(
		select count(*)
		  from (
		        select 
		             (
		              select count(*)
		                from reply r1
		               where r1.ref_rno = r2.reply_no
		                 and r1.status = 'Y'
		             ) as replyCount
		          from reply r2
		         where ref_fno = #{fno}
		           and reply_level = 1
		           and r2.status = 'N'
		       ) 
		 where replyCount > 0
		) 
		+
		(
		select 
		       count(*)
		  from reply
		 where ref_fno = #{fno}
		   and status = 'Y'
		   and reply_level = 1
		) as count from dual
	</select>
	
	<select id="selectReplyList" parameterType="Freenote" resultMap="replyResultSet">
		select * from
		(
		select *
		  from (
		        select 
		               reply_no
		             , reply_content
		             , reply_like
		             , to_char(create_date, 'yyyy.mm.dd hh24:mi') as create_date
		             , nickname
		             , profile
		             , ref_rno
		             , reply_level
		             , r2.status
		             , (
		                select count(*)
		                  from reply r1
		                 where r1.ref_rno = r2.reply_no
		                   and r1.status = 'Y'
		               ) as replyCount
		             , (
                        select count(*)
                          from reply_like
                         where reply_no = r2.reply_no
                           and member_no = #{freenoteWriter}
                       ) as likeStatus    
		          from reply r2
		          join member using(member_no)
		         where ref_fno = #{freenoteNo}
		           and reply_level = 1
		           and r2.status = 'N'
		       ) 
		 where replyCount > 0
		union
		select 
		       reply_no
		     , reply_content
		     , reply_like
		     , to_char(create_date, 'yyyy.mm.dd hh24:mi') as create_date
		     , nickname
		     , profile
		     , ref_rno
		     , reply_level
		     , r.status
		     , null as replyCount
		     , (
                select count(*)
                  from reply_like
                 where reply_no = r.reply_no
                   and member_no = #{freenoteWriter}
               ) as likeStatus
		  from reply r
		  join member using(member_no)
		 where ref_fno = #{freenoteNo}
		   and reply_level = 1
		   and r.status = 'Y'
		) order by reply_no desc
	</select>
	
	<select id="selectReplyList2" parameterType="Freenote" resultMap="replyResultSet">
		select 
		       reply_no
		     , reply_content
		     , reply_like
		     , to_char(create_date, 'yyyy.mm.dd hh24:mi') as create_date
		     , nickname
		     , profile
		     , ref_rno
		     , reply_level
		     , (
                select count(*)
                  from reply_like
                 where reply_no = r.reply_no
                   and member_no = #{freenoteWriter}
               ) as likeStatus   
		  from reply r
		  join member using(member_no)
		 where ref_fno = #{freenoteNo}
		   and reply_level = 2
		   and r.status = 'Y'
		 order
		    by reply_no asc
	</select>
	
	<insert id="insertReply" parameterType="Reply">
		insert
		  into reply
		  (
		     reply_no
		   , reply_content
		   , ref_fno
		   , member_no
		   <if test="refRno != 0">
		   , ref_rno
		   </if>
		   , reply_level
		  )
		  values
		  (
		     seq_replyno.nextval
		   , #{replyContent}
		   , #{refFno}
		   , #{replyWriter}
		   <if test="refRno != 0">
		   , #{refRno}
		   </if>
		   , #{replyLevel}
		  )
	</insert>
	
	<update id="deleteReply" parameterType="_int">
		update 
		       reply
		   set status = 'N'
		 where reply_no = #{rno}
	</update>
	
	<select id="checkLikePost" parameterType="Freenote" resultType="_int">
		select count(*)
		  from freenote_like
		 where member_no = #{freenoteWriter}
		   and freenote_no = #{freenoteNo}
	</select>
	
	<insert id="likePost" parameterType="Freenote">
		insert
		  into freenote_like
		  (
		     member_no
		   , freenote_no  
		  )
		  values
		  (
		     #{freenoteWriter}
		   , #{freenoteNo}  
		  )
	</insert>
	
	<delete id="dislikePost" parameterType="Freenote">
		delete
		  from freenote_like
		 where member_no = #{freenoteWriter}
		   and freenote_no = #{freenoteNo}
	</delete>
	
		<select id="checkLikeReply" parameterType="Reply" resultType="_int">
		select count(*)
		  from reply_like
		 where member_no = #{replyWriter}
		   and reply_no = #{replyNo}
	</select>
	
	<insert id="likeReply" parameterType="Reply">
		insert
		  into reply_like
		  (
		     member_no
		   , reply_no  
		  )
		  values
		  (
		     #{replyWriter}
		   , #{replyNo}  
		  )
	</insert>
	
	<delete id="dislikeReply" parameterType="Reply">
		delete
		  from reply_like
		 where member_no = #{replyWriter}
		   and reply_no = #{replyNo}
	</delete>
	
	
	<!-- 커뮤니티 -->
	<select id="selectCommListCount" parameterType="string" resultType="_int">
		select 
		       count(*)
		  from freenote
		 where freenote_topic like '%' || #{topicName} || '%'
		   and status = 'Y'
   		   and freenote_privacy_comm = 'Y'
	</select>
	
	<select id="selectCommList" parameterType="string" resultMap="freenoteResultSet">
		select 
		       nickname
		     , profile
		     , freenote_no
		     , freenote_title
		     , freenote_like
		     , to_char(create_date, 'yyyy-mm-dd') as create_date
		     , freenote_topic
		     , freenote_count
			 , (select count(*)
                  from reply
                 where ref_fno = freenote_no
                   and status ='Y'
                ) as replyCount
		  from freenote f
		  join member using(member_no)
		 where freenote_topic like '%' || #{topicName} || '%'
		   and f.status = 'Y'
		   and freenote_privacy_comm = 'Y'
		 order
		    by freenote_no desc
	</select>	
	
	<select id="selectSearchListCount" parameterType="SearchCondition" resultType="_int">
		select 
		       count(*)
		  from freenote f
		  join member using(member_no)
		 where f.status = 'Y'
		   and freenote_privacy_comm = 'Y'
		 <choose>
		 	<when test="condition == 'title'">
		    	and freenote_title like '%' || #{keyword} || '%'
		 	</when>
		 	<when test="condition == 'writer'">
		    	and nickname like '%' || #{keyword} || '%'		 	
		 	</when>
		 	<otherwise>
		    	and (nickname like '%' || #{keyword} || '%'
		     	 or freenote_title like '%' || #{keyword} || '%')		 	
		 	</otherwise>
		 </choose>
	</select>
	
		<select id="selectSearchList" parameterType="SearchCondition" resultMap="freenoteResultSet">
		select 
		       nickname
		     , profile  
		     , freenote_no
		     , freenote_title
		     , freenote_like
		     , to_char(create_date, 'yyyy-mm-dd') as create_date
		     , freenote_topic
		     , freenote_count
		     , (select count(*)
                  from reply
                 where ref_fno = freenote_no
                   and status ='Y'
                ) as replyCount
		  from freenote f
		  join member using(member_no)
		 where f.status = 'Y'
		   and freenote_privacy_comm = 'Y'
		 <choose>
		 	<when test="condition == 'title'">
		    	and freenote_title like '%' || #{keyword} || '%'
		 	</when>
		 	<when test="condition == 'writer'">
		    	and nickname like '%' || #{keyword} || '%'		 	
		 	</when>
		 	<otherwise>
		    	and (nickname like '%' || #{keyword} || '%'
		     	 or freenote_title like '%' || #{keyword} || '%')		 	
		 	</otherwise>
		 </choose>
			  order
		 <choose>
		 	<when test="sort == 'recent'">
			   	 by freenote_no desc
		 	</when>
		 	<otherwise>
		 		 by freenote_count desc
		 	</otherwise>
		 </choose>
	</select>
	
	<select id="checkReport" parameterType="Report" resultType="_int">
		select
		       count(*)
		  from report
		 where report_writer = #{reportWriter}
		   and report_postNo = #{reportPostNo}
		   and report_posttype = #{reportPostType}
	</select>

	<insert id="insertReport" parameterType="Report">
		insert 
		  into report
		  (
		     report_no
		   , report_writer
		   , report_posttype
		   , report_type
		   , report_content
		   , report_link
		   , report_postno
		  )
		  values
		  (
		     seq_reportno.nextval
		   , #{reportWriter}
		   , #{reportPostType}
		   , #{reportType}
		   , #{reportContent}
		   , #{reportLink}
		   , #{reportPostNo}
		  )
	</insert>
	
	<select id="checkFriend" parameterType="Friend" resultType="_int">
		select count(*)
		  from friend
		 where (friend_accepted = #{friendAccepted}
		   and friend_owner = #{friendOwner})
		    or (friend_accepted = #{friendOwner}
		   and friend_owner = #{friendAccepted})
	</select>
	
	<insert id="requestFriend" parameterType="Friend">
		insert
		  into friend
		  (
		     friend_no
		   , friend_accepted
		   , friend_owner
		   , friend_status  
		  )
		  values
		  (
		  	 seq_friendno.nextval
		   , #{friendAccepted}
		   , #{friendOwner}
		   , 'N'
		  )
	</insert>
	
	
	<select id="selectAdminCommList" resultMap="freenoteResultSet">
		select 
		       member_id
		     , freenote_no
		     , freenote_title
		     , to_char(create_date, 'yyyy-mm-dd') as create_date
		     , freenote_count
		     , freenote_like
		     , (select count(*)
		          from reply
		         where ref_fno = freenote_no
		           and status ='Y'
		        ) as replyCount
		  from freenote f
		  join member using(member_no)
		 where f.status = 'Y'
		   and freenote_privacy_comm = 'Y'
		 order
		    by freenote_no desc
	</select>	
</mapper>
